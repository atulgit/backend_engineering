version: '3.7'

services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    # user: cassandra  # Add this line to run as cassandra user
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_PASSWORD_SEEDER=yes
      - JVM_EXTRA_OPTS=-javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=7070:/etc/cassandra/jmx_exporter.yml
    ports:
      - "9042:9042"     # CQL
      - "7199:7199"     # Native Cassandra JMX (you can keep this)
      - "7070:7070"     # Prometheus JMX Exporter port
    volumes:
      - ./cassandra-jmx.yml:/etc/cassandra/jmx_exporter.yml       # Your JMX config
      - ./jmx_prometheus_javaagent-0.20.0.jar:/opt/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar  # Mount JMX exporter agent
    networks:
      - monitoring

  nosqlbench:
    image: nosqlbench/nosqlbench:latest
    container_name: nosqlbench
    environment:
      - PATH=/opt/nb5:$PATH
    volumes:
      - ./test-plans:/test-plans
    entrypoint: [ "tail", "-f", "/dev/null" ] # Keep container running so you can exec into it
    depends_on:
      - cassandra
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - cassandra # Prometheus will now wait for Cassandra's health check to pass

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongodb_data:/data/db
    networks:
      - monitoring

  # mongodb_exporter:
  #   image: percona/mongodb_exporter:0.40
  #   container_name: mongodb_exporter
  #   restart: always
  #   ports:
  #     - "9216:9216"
  #   environment:
  #     MONGODB_URI: "mongodb://admin:secret@mongodb:27017"
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - monitoring

networks:
  monitoring:
    driver: bridge
volumes:
  mongodb_data: {}
