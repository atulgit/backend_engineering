apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: ns-pg-cluster
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: ns-pg-cluster
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXM=  # base64 for 'postgres'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ns-pg-cluster
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: mydb
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage

        - name: postgres-exporter
          image: bitnami/postgres-exporter
          env:
            - name: DATA_SOURCE_NAME
              value: "postgresql://postgres:postgres@localhost:5432/postgres?sslmode=disable"
          ports:
            - containerPort: 9187

        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/

      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: ns-pg-cluster
spec:
  type: LoadBalancer
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30032
  selector:
    app: postgres
